- hosts: workstations
  become: true
  tasks:
    - name: adding existing user '{{ user }}' to group sudo
      user:
        name: '{{ user }}'
        groups: wheel
        append: yes
    - name: Copy etc
      tags: etc
      copy:
        src: etc/
        dest: /etc/
        owner: root
        group: root
        mode: 0444
    - name: Add Zypper repos
      tags:
        - pkgs
      community.general.zypper_repository:
        auto_import_keys: true
        priority: 103
        name: "{{ item.name }}"
        repo: "{{ item.repo }}"
      with_items:
        - name: zerotier
          repo: https://download.zerotier.com/redhat/el/7
        - name: ani-cli
          repo: https://download.copr.fedorainfracloud.org/results/derisis13/ani-cli/opensuse-tumbleweed-x86_64/
        - name: yggdrasil
          repo: https://download.copr.fedorainfracloud.org/results/neilalexander/yggdrasil-go/opensuse-tumbleweed-x86_64/
        - name: jdupak
          repo: https://download.opensuse.org/repositories/home:/jdupak/openSUSE_Tumbleweed/
        - name: MaxxedSUSE
          repo: https://download.opensuse.org/repositories/home:/MaxxedSUSE/openSUSE_Tumbleweed/
        - name: michal_atlas
          repo: https://download.opensuse.org/repositories/home:/michal_atlas/openSUSE_Tumbleweed/
        - name: tecosaur
          repo: https://download.opensuse.org/repositories/home:/tecosaur/openSUSE_Tumbleweed/
        - name: multimedia
          repo: https://download.opensuse.org/repositories/multimedia:/apps/openSUSE_Tumbleweed/
        - name: games
          repo: https://download.opensuse.org/repositories/games/openSUSE_Tumbleweed/
        - name: vscode
          repo: https://packages.microsoft.com/yumrepos/vscode
    - name: Install protonmail
      command: zypper in https://proton.me/download/mail/linux/1.2.4/ProtonMail-desktop-beta.rpm
      args:
        creates: /bin/proton-mail

    - name: Install patterns
      tags:
        - pkgs
      zypper:
        type: pattern
        disable_recommends: false
        name:
          - devel_basis
          - devel_C_C++
          - devel_java
          - devel_mono
          - devel_python3
          - games
          - gnome
          - network_admin
          - kvm_server
          - yast2_basis

    - name: Install packages
      tags:
        - pkgs
      zypper:
        disable_recommends: false
        name:
          - ani-cli
          - ansible
          - avahi-utils
          - bat
          - btrbk
          - mbuffer
          - cabal-install
          - clang
          - clang-tools
          - cron
          - code
          - direnv
          - discord
          - dust
          - emacs
          - fd
          - fira-code-fonts
          - fzf
          - gdouros-symbola-fonts
          - gnome-font-viewer
          - go
          - gparted
          - graphviz
          - krita
          - kubo
          - libvirt-daemon
          - maxima
          - maven
          - meld
          - mpv
          - mystic
          - npm
          - onedrive
          - osc
          - pagekite
          - podman
          - postgresql-server
          - python312-fanficfare
          - python312-psycopg2
          - rpmdevtools
          - rpm-build
          - rsync
          - rustup
          - qbittorrent
          - racket
          - rclone
          - ripgrep
          - sbcl
          - ShellCheck
          - shfmt
          - starship
          - steam
          - stow
          - symbols-only-nerd-fonts
          - syncthing
          - telegram-desktop
          - texlive
          - texlive-collection-basic
          - texlive-collection-langczechslovak
          - texlive-collection-latex
          - texlive-collection-latexrecommended
          - texlive-optex
          - texlive-optex
          - vcmi
          - vlc
          - wesnoth
          - wireguard-tools
          - xonotic
          - xpadneo
          - yggdrasil
          - yt-dlp
          - zerotier-one
          - zotero
          - zsh

    - name: Join ZeroTier network
      command: zerotier-cli join {{ zerotier_network_id }}
      args:
        creates: /var/lib/zerotier-one/networks.d/{{ zerotier_network_id }}.conf
      vars:
        zerotier_network_id: c7c8172af19f63d7

    - name: Stow dotfiles
      tags: stow
      become: true
      become_user: "{{ user }}"
      shell: stow --verbose=2 --dir={{ home }}/cl/dotfiles --target={{ home }} --dotfiles home
      register: result 
      changed_when: 'result.stderr is search("LINK: ")'

    - name: Get CTU FIT OpenVPN config
      get_url:
        dest: /usr/share/fit-vpn.ovpn
        owner: root
        group: root
        mode: 0444
        url: https://help.fit.cvut.cz/vpn/media/fit-vpn.ovpn
        checksum: sha256:8d784a956ac10c81bcdf3e84f440c1a7802e80627dabe9a1fbec75278a190459
    - name: Import CTU FIT OpenVPN config into NetworkManager
      shell:
        nmcli connection import type openvpn file /usr/share/fit-vpn.ovpn;
        nmcli connection modify fit-vpn connection.permissions user:{{ user }};
        nmcli connection modify fit-vpn +ipv4.never-default true +ipv6.never-default true;
        nmcli connection modify fit-vpn +vpn.data username=zacekmi2;
      args:
        creates: /etc/NetworkManager/system-connections/fit-vpn.nmconnection
    - name: Add CTU FIT Mount
      mount:
        backup: true
        fstype: cifs
        opts: defaults,x-systemd.automount,x-systemd.idle-timeout=10s,credentials=/root/ctu.mount,username=zacekmi2,sec=ntlmv2i,file_mode=0700,dir_mode=0700,uid=1000
        path: /ctu
        src: //drive.in.fit.cvut.cz/home/zacekmi2
        state: present
    - name: Add home NAS Mount
      mount:
        backup: true
        boot: false
        fstype: cifs
        opts: "defaults,x-systemd.automount{{ '' if nasDisableTimeout else ',x-systemd.idle-timeout=120s' }},username=guest,password=\"\",vers=1.0"
        path: /RouterDisk
        src: //192.168.0.1/sda1
        state: present

    - name: Get Quicklisp installer
      get_url:
        dest: /usr/share/quicklisp.lisp
        owner: root
        group: root
        mode: 0444
        url: https://beta.quicklisp.org/quicklisp.lisp
    - name: Install quicklisp
      become: true
      become_user: "{{ user }}"
      command: sbcl --load /usr/share/quicklisp.lisp --eval '(quicklisp-quickstart:install)' --quit
      args:
        creates: "{{ home }}/quicklisp/setup.lisp"
    - name: Clone Emacs DOOM
      become: true
      become_user: "{{ user }}"
      git:
        depth: 1
        repo: https://github.com/doomemacs/doomemacs
        dest: "{{ home }}/.config/emacs"
    - name: IPFS Init
      become: true
      become_user: "{{ user }}"
      command: ipfs init
      args:
        creates: "{{ home }}/.ipfs"
    - name: IPFS Set low power
      become: true
      become_user: "{{ user }}"
      shell: ipfs config profile apply lowpower;
             ipfs config profile apply announce-off
    - name: Flatpak remotes
      flatpak_remote:
        name: flathub
        flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
    - name: Flatpak installs
      flatpak:
        name:
          - com.spotify.Client
    - name: "Postgres: disable authentication for local connections"
      tags: db
      community.postgresql.postgresql_pg_hba:
        backup: true
        address: "{{ item }}"
        contype: host
        dest: /var/lib/pgsql/data/pg_hba.conf
        method: trust
      with_items:
        - "::1"
        - "127.0.0.1"
    - name: Enable system units
      ansible.builtin.systemd_service:
        name: "{{ item }}"
        daemon_reload: true
        enabled: true
      with_items:
        - btrbk.timer
        - cron
        - zerotier-one
        - libvirtd
        - postgresql
    - name: "Postgres: create my role"
      tags: db
      community.postgresql.postgresql_user:
        name: "{{ user }}"
        password: ""
        role_attr_flags: "SUPERUSER"
      become: true
      become_user: postgres
    - name: .face
      get_url:
        url: https://git.sr.ht/~michal_atlas/www/blob/992dbc2f5dc9b1ca5324ec644059c11537e7462b/assets/mlxan/carcass-mountain/portraits/weeping-priest.jpeg
        owner: michal_atlas
        group: michal_atlas
        mode: 0444
        dest: "{{ home }}/.face"
        checksum: sha256:d4c9c7b18289a48fe1f3325ad3532d3e381ffd432d48b650ed859cb258f55f17
    - name: Enable user units
      become: true
      become_user: "{{ user }}"
      ansible.builtin.systemd_service:
        scope: user
        name: "{{ item }}"
        daemon_reload: true
        enabled: true
      with_items:
        - systemd-tmpfiles-setup
        - systemd-tmpfiles-clean.timer
        - emacs
        - syncthing
        - ipfs
